/* automatically generated by rust-bindgen 0.71.1 */

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Query {
    pub len: ::std::os::raw::c_int,
    pub query: *mut ::std::os::raw::c_char,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of Query"][::std::mem::size_of::<Query>() - 16usize];
    ["Alignment of Query"][::std::mem::align_of::<Query>() - 8usize];
    ["Offset of field: Query::len"][::std::mem::offset_of!(Query, len) - 0usize];
    ["Offset of field: Query::query"][::std::mem::offset_of!(Query, query) - 8usize];
};
pub const Affinity_READ: Affinity = 1;
pub const Affinity_WRITE: Affinity = 2;
pub type Affinity = ::std::os::raw::c_uint;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Route {
    pub affinity: Affinity,
    pub shard: ::std::os::raw::c_int,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of Route"][::std::mem::size_of::<Route>() - 8usize];
    ["Alignment of Route"][::std::mem::align_of::<Route>() - 4usize];
    ["Offset of field: Route::affinity"][::std::mem::offset_of!(Route, affinity) - 0usize];
    ["Offset of field: Route::shard"][::std::mem::offset_of!(Route, shard) - 4usize];
};
